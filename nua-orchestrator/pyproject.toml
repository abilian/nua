[tool.poetry]
name = "nua-orchestrator"
version = "0.4.67"
description = "Nua orchestrator local implementation for Nua v0."
authors = ["Jerome Dumonteil <jd@abilian.com>"]
license = "AGPL"
readme = "README.md"
packages = [
  { include = "nua", from = "src" }
]

[tool.poetry.scripts]
nua = "nua.orchestrator.main:app"
nua-bootstrap = "nua.orchestrator.scripts.bootstrap:main"
nua-pg-pwd = "nua.orchestrator.scripts.set_pg_pwd:app"
nua-mariadb-init = "nua.orchestrator.scripts.mariadb_restore:app"
nua-print-instances = "nua.orchestrator.scripts.print_instances:main"
nua-print-volumes = "nua.orchestrator.scripts.print_mounted_volumes:main"
nua-print-ports = "nua.orchestrator.scripts.print_used_ports:main"
nua-deactivate-all = "nua.orchestrator.scripts.deactivate_all_instances:main"
nua-docker-list-all = "nua.orchestrator.scripts.docker_list_all:main"
nua-docker-rm-all = "nua.orchestrator.scripts.docker_remove_all:main"
nua_test_replace_domain = "nua.orchestrator.scripts.test_replace_domain:main"
nua_test_services = "nua.orchestrator.service:test"

[tool.poetry.dependencies]
python = "^3.10"

nua-lib = { path = "../nua-lib/", develop = false }
nua-runtime = { path = "../nua-runtime/", develop = false }
nua-autobuild = { path = "../nua-autobuild/", develop = false }

# Databases
SQLAlchemy-serializer = "^1.4.1"
SQLAlchemy = "^1.4.36"
psycopg2-binary = "^2.9.3"

# Other deps
setuptools = "^65.5.0"
wheel = "^0.38"
tomli = "^2.0.1"
paramiko = "^2.11.0"
docker = "^6.0"
fabric = "^2.7.0"
typer = {extras = ["all"], version = "^0.7.0"}
python-dotenv = "^0.21"

[tool.poetry.group.dev.dependencies]
abilian-devtools = "*"
nox = "*"
types-paramiko = "^2.12.0.1"
types-requests = "^2.28.11.5"


[tool.pytest.ini_options]
filterwarnings = ["ignore:.*distutils package:DeprecationWarning", "ignore::DeprecationWarning"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
ignore = [
    # FIXME: this is easy to test
    "E501",  # line too long
    "F401",  # 'module' imported but unused
]

[tool.deptry]
exclude = [
    '.tox', '.nox', 'noxfile.py', 'tests', 'sandbox', 'doc', 'scripts'
]
ignore_obsolete = [
    "nua-lib",
    "nua-runtime",
    "nua-autobuild",
    "setuptools",
    "wheel",
]
ignore_missing = [
    "nua",
]
ignore_transitive = [
    "packaging",
    "requests",
]


[tool.pyright]
exclude = [
    '.tox',
    '.nox',
    'tests',
    'sandbox',
    'doc',
]
