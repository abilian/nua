[metadata]
id = "flask-pg-dock-psyco"
version = "1.0"
release = 3
title = "Flask/PostgreSQL/docker/psycopg2 test wheel"
author = "Nua testers"
tagline = "Nua test with Flask/PostgreSQL/docker/psycopg2"
website = "https://nua.rocks/"
tags = ["test", "html", "web", "static", "plugin", "PostgreSQL", "docker", "psycopg2"]
license = "MIT"

[build]
document-root = "/nua/app/html"
# erroneous double declaration of aliases for same package:
meta-packages = ["psycopg2", "postgres-client"]
project = "."
test-cmd = "python -c 'import flask_pg_dock_psyco'"

[instance]
# name of the bridge network used by this container and related resources.
# network = "flask-pg-1"

[[assign]]
key = "POSTGRES_PASSWORD"
random_str = true

[[assign]]
key = "USER_PASSWORD"
random_str = true

[env]
# using default port of postgres, directly addressing the postgres docker container.
# DB_HOST for the resource "database" will be found in the env variable NUA_DATABASE_HOST
DB_PORT = "5432"
# Postgres password of the "remote" resource DB:
USER_DB = "bob_db"
USER_NAME = "bob"

[docker]
restart_policy.name = "always"

[port.web]
# publication port of the app inside the container
container = 80
# Publication port on the localhost, that will be automatically generated and will
# be used for configuration of the nginx proxy
host = "auto"

[[resource]]
# A resource is another container required by the main app container, its
# configuration is described below, under the key of name of the resource. Several
# resources can be declared. The resource host will appear in the local network
# with a hostname equal to the container name. The name of the resource hostname
# is available in the environment variable NUA_${name_of_the_resource}_HOST, ie in
# this example: NUA_DATABASE_HOST

# declaration of the required image for the resurce, here the official Postgres
# Docker image
name = "database"
type = "docker"
image = "docker.io/library/postgres:14.5"

[resource.env]

[resource.docker]
    detach = true
    restart_policy.name="always"

[[resource.volume]]
    # here we declare a mounted volume (ie: managed by Docker daemon)

    # The mount type (bind / volume / tmpfs / npipe). Default: volume :
    type = "volume"
    # Name of the driver used to create the volume: (for type == "volume")
    driver = "local"
    # Mount source (e.g. a volume name or a host path):
    source-prefix = "postgres_data_pg_1"
    # Container path:
    target = "/var/lib/postgresql/data"
