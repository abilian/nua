[metadata]
id = "hedgedoc"
version = "1.9.6"
release = 13
title = "Hedgedoc"
author = "Hedgedoc developers"
tagline = "Nua test with Hedgedoc"
website = "https://nua.rocks/"
tags = ["Markdown", "Documentation", "Collaboration"]
license = "AGPL-3.0 license"
# profile = ["node"]
src_url = "https://github.com/hedgedoc/hedgedoc/releases/download/{version}/hedgedoc-{version}.tar.gz"

[profile]
# use a specific docker image containing nodejs:
node = ">=14.13.1,<17"

[build]

meta-packages = ["postgres-client"]

packages = [
    "fontconfig",
    "fonts-noto"
]

build-packages = [
    "build-essential",
    "python3-dev",
    "libsqlite3-dev",
    "netcat",
    "libicu-dev",
    "libssl-dev",
    "git",
]

test-cmd = "test -f /nua/build/hedgedoc/healthcheck.mjs"

# [[assign]]
# key = "POSTGRES_PASSWORD"
# random_str = true

[[assign]]
key = "CMD_DB_HOST"
resource_property = "database.hostname"
[[assign]]
key = "CMD_DB_DATABASE"
resource_property = "database.POSTGRES_DB"
[[assign]]
key = "CMD_DB_USERNAME"
resource_property = "database.POSTGRES_USER"
[[assign]]
key = "CMD_DB_PASSWORD"
resource_property = "database.POSTGRES_PASSWORD"


[env]
# IMPORTANT:to be set at the actual domain deployed:
CMD_DOMAIN = "localhost"

NODE_ENV = "production"
DEBUG = "true"
UPLOADS_MODE = "0700"

TZ = "Europe/Paris"

# CMD_URL_PATH # if sub directory
# CMD_DB_URL = "postgres://hedgedoc:password@database:5432/hedgedoc"
# CMD_DB_URL = "sqlite:///nua/data/sqlite.db"
# HSTS_ENABLE defines if HSTS headers should be sent. Set this to true if you use HTTPS.
CMD_HSTS_ENABLE = "false"
# URL_ADDPORT defines if generated links should contain the port.
CMD_URL_ADDPORT = "false"
CMD_PROTOCOL_USESSL = "false"
# CMD_ALLOW_ORIGIN=['localhost'] #optional
# CMD_ALLOW_ORIGIN =

# See https://docs.hedgedoc.org/configuration/#users-and-privileges
CMD_ALLOW_ANONYMOUS = "true"
CMD_ALLOW_ANONYMOUS_EDITS = "true"
# CMD_ALLOW_FREEURL
# CMD_REQUIRE_FREEURL_AUTHENTICATION
# CMD_DEFAULT_PERMISSION

CMD_EMAIL = "true"
CMD_ALLOW_EMAIL_REGISTER = "true"

# postgres:
CMD_DB_PORT = "5432"
CMD_DB_DIALECT = "postgres"
# CMD_DB_URL = "postgres://username:password@localhost:5432/hedgedoc"

[docker]
# parameters passed as a dict to docker run
auto_remove = false

[port.web]
container = 3000

[healthcheck]
command = "node /nua/build/hedgedoc/healthcheck.mjs"
interval = 10

[[volume]]
# declare a local volume for plublic uploads
# bind example: type = "bind"
type = "volume"

# Name of the driver used to create the volume: (for type == "volume")
# driver = "local"  # default for "volume" type
# Mount source (e.g. a volume name or a host path):
source_prefix = "hedgedoc_uploads"

# Container path:
target = "/hedgedoc/public/uploads"
# mode (default to 'rw'
# mode = "rw"

[volume.backup]
method = "sync"
destination = "local"
frequency = "24h"


[[resource]]
# A resource is another container required by the main app container, its
# configuration is described below, under the key of name of the resource. Several
# resources can be declared. The resource host will appear in the local network
# with a hostname equal to the container name.

# Declaration of the required image for the resurce, here the official Postgres.
name = "database"
type = "postgres"
version = ">=14, <15"

[resource.backup]
method = "pg_dumpall"
destination = "local"
frequency = "24h"
