[tool.poetry]
name = "nua-master"
version = "0.4.98"
description = ""
authors = [
    "Stefane Fermigier <sf@abilian.com>",
    "Jerome Dumonteil <jd@abilian.com>",
]
license = "AGPL"


[tool.poetry.dependencies]
python = "^3.10"

nua-lib = { path = "nua-lib", develop = true }
nua-cli = { path = "nua-cli", develop = true }
nua-agent = { path = "nua-agent", develop = true }
nua-autobuild = { path = "nua-autobuild", develop = true }
nua-build = { path = "nua-build", develop = true }
nua-orchestrator = { path = "nua-orchestrator", develop = true }


[tool.poetry.group.dev.dependencies]
# Testing / checking
nox = "*"
abilian-devtools = "*"
pydeps = "^1.11.1"

autotyping = "^22.9.0"
pytest-monkeytype = "^1.1.0"

docformatter = "*"

# Helper for monorepo
invoke = "^2.0.0"

# Code coverage (reporting)
codecov = "*"

# Typing
types-setuptools = "*"
types-paramiko = "*"
types-requests = "*"
types-pyyaml = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# ------------------------------------------------------------------------------

[tool.ruff]
select = [
    "F",
    "E",
    "C90",
    "I",
    "UP",
    "N",
    "YTT",
    "B",
    "A",
    "C4",
    "ICN",
    "Q",
    "S",
    "BLE",
    "RET",
    "SIM",
    "TID",
    "RUF",
    "PLC", "PLE", "PLR", "PLW",
]
# Add later: "ANN", "ERA"...

extend-exclude = [
    ".nox",
    # XXX: check later
    "apps",
    "demo",
    "nua",
]

# ------------------------------------------------------------------------------

[tool.bandit]
skips = [
    "B404", # blacklist
    "B603", # subprocess_without_shell_equals_true
]
