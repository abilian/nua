[tool.poetry]
name = "aipress24-flask"
version = "0.1.0"
description = ""
authors = ["Stefane Fermigier <sf@abilian.com>"]
packages = [{ include = "app", from = "src" }]

[tool.poetry.scripts]
aip-config = "app.flask.cli:config"
aip-generate-fake-data = "app.flask.cli:generate_fake_data"
aip-bootstrap = "app.flask.cli:bootstrap"
aip-healthcheck = "app.flask.cli:healthcheck"

[tool.poetry.dependencies]
python = "^3.10"

# Flask
flask = "^2.1.3"
flask-babelex = "^0.9.4"
flask-httpauth = "^4.7.0"
flask-mail = "^0.9.1"
flask-migrate = "^3.1.0"
flask-security-too = "^4.1.5"
flask-login = "*"
flask-sqlalchemy = "^2.5.1"
flask-session = "^0.4.0"
flask-tailwind = "^0.1.7"
flask-talisman = "^1.0.0"
flask-vite = "^0.1.3"
flask-wtf = "^1.0.1"

# Pinned down for now
# jinja2 = "~3.0.3"
# werkzeug = "~2.0.3"
# click = "~8.0.4"
dynaconf = "3.1.7"

# More Web
webargs = "^8.2.0"
authlib = "^1.0.1"
# requests = "^2.28.1"

# Vendored
# flask-tailwind = { path = "./vendor/flask-tailwind", develop = true }
# flask-vite = {path = "vendor/flask-vite", develop = true}

# Security
zxcvbn = "^4.4.28"
bcrypt = "^3.2.2"
# sqreen = "^1.27.4"

# Libs
arrow = "^1.2.2"
python-slugify = "^6.1.2"
tomli = "^2.0.1"
# venusian = "^3"

# Config
python-dotenv = "^0.19.2"

# Additional language support
pipe = "^1.6.0"
aenum = "^3.1.11"
attrs = "^21.4.0"

# Removed for now (?)
# python-benedict = "^0.24.3"
# ubelt = "^0.10.2"
# python-dateutil = "^2.8.2"
# yarl = "^1.7.2"

# Templating
# viewdom = "^0.5.1"
domonic = "^0.9.11"

# Fake data generators
faker = "^11.4.0"
mimesis = "^5.5.0"

# ORM
sqlalchemy = "~1.4.39"
sqlalchemy-utils = "^0.38.3"
psycopg2 = "^2.9.3"

# Prod
# circus = "^0.17.1"
# gunicorn = "^20.1.0"
# honcho = "^1.1.0"
# sqreen = "^1.27.4"

# CLI
rich = "*"

# Debug / develop
devtools = "^0.8.0"
snoop = "^0.4.1"
flask-debugtoolbar = "^0.13.1"

# Images
pillow = "^9.2.0"
opencv-python = "*"


# NLP & content extraction
spacy = "^3.4.1"
beautifulsoup4 = "^4.11.1"
lxml = "^4.9.1"
pijnu = "20160727"
#mediawiki-parser = "^0.4.1"
sentry-sdk = "^1.9.0"
sourcetypes = "^0.0.2"


[tool.poetry.dev-dependencies]
# Linting / formatting
flake8 = "^5.0.3"

flake8-aaa = "^0.12.2"
flake8-bugbear = "^22.7.1"
flake8-cognitive-complexity = "^0.1.0"
flake8-comprehensions = "^3.10.0"
flake8-datetimez = "20.10.0"
flake8-functions = "^0.0.7"
flake8-mutable = "^1.2.0"
flake8-simplify = "^0.19.3"
flake8-super = "^0.1.3"
flake8-super-call = "^1.0.0"
flake8-tidy-imports = "^4.8.0"
flake8-tuple = "0.4.1"

# Compatibility issues with these
# flake8-pytest = "^1.3"
# flake8-bandit = "3.0.0"
# mastool = "^0.1.3"

isort = "^5.10.1"
# mccabe = "^0.7"
black = "^22.6.0"

# More
# flake8-return = "*"
# wemake-python-styleguide = "*"

# Testing
pytest = "^7.1.2"
pytest-flask = "^1.2.0"
coverage = "^6.4.2"
behaving = "^3.0.4"

# Mypy & friends
mypy = "^0.971"
types-Markdown = "^3.4.0"
types-bleach = "^5.0.3"
types-chardet = "^5.0.3"
types-deprecated = "^1.2.9"
types-python-dateutil = "^2.8.19"
types-python-slugify = "^6.1.0"
types-pytz = "^2022.1.2"
types-pyyaml = "^6.0.11"
types-redis = "^4.3.13"
types-requests = "^2.28.7"
types-setuptools = "^63.2.2"
safety = "^2.1.1"
monkeytype = "^22.2.0"
pyanalyze = "^0.7.0"
import-linter = "^1.2.7"
# tryceratops = "^0.6"


# Tools
openpyxl = "^3.0.10"
pip-audit = "*"
poetryup = "*"
autotyping = "^21.12.0"
typeguard = "^2.13.3"
vulture = "^2.5"

# Docs
mkdocs = "^1.3.1"
mkdocs-material = "^8.3.9"
mkdocs-material-extensions = "^1.0.3"
mkdocs-roamlinks-plugin = "^0.1.4"
sqla2uml = "^0.1.2"
mkdocs-with-pdf = "^0.9.3"
mkdocstrings = {extras = ["python"], version = "^0.18.1"}


[tool.poetry.group.dev.dependencies]
deptry = "^0.4.6"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


# pyproject.toml
[tool.pytest.ini_options]
filterwarnings = [
    'ignore:.*contextfunction.*:DeprecationWarning',
    'ignore:.*Unmanaged.*:sqlalchemy.exc.SAWarning'
]
addopts = "--tb=short"
testpaths = [
    "tests",
    "src",
]


[tool.pyanalyze]
paths = ["src/"]
import_paths = ["."]

# Additional checks
bare_ignore = true
missing_f = true
use_fstrings = true
value_always_true = true

# TODO: fix issues and activate
#unused_ignore = true
#enforce_no_unused = true
#incompatible_override = true
#missing_parameter_annotation = true
#missing_return_annotation = true
#suggested_parameter_type = true
#suggested_return_type = true
#use_fstrings = true
#value_always_true = true

# TODO: fix issues and remove
attribute_is_never_set = false
duplicate_dict_key = false
import_failed = false
impossible_pattern = false
incompatible_argument = false
incompatible_call = false
incompatible_return_value = false
internal_error = false
missing_return = false
possibly_undefined_name = false
undefined_attribute = false
unused_variable = false


[tool.deptry]
ignore_obsolete = [
    # Used (implicitely) by Flask-Login (I think)
    "bcrypt",
    "zxcvbn",
    # Used (implicitely) by Flask (I think)
    "python-dotenv",
    # Used (implicitely) by BS4
    "lxml",
    # Not used but may be used
    "sourcetypes",
    # Used (bug of deptry?
    "psycopg2",
    "opencv-python",
    # User by scripts
    "pijnu",
]
ignore_missing = [
    "app",
    "mediawiki_parser",
    "pkg_resources",
    "watchgod",
]
ignore_transitive = [
    # FIXME later
    "jinja2",
    "markupsafe",
    "wtforms",
    "werkzeug",
    "alembic",
    "blinker",
    "click",
    "numpy",
    "pytz",
]
exclude = [
    '.tox', 'tests', 'sandbox', 'doc', 'scripts'
]
