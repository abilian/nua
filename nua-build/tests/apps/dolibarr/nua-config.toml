[metadata]
id = "dolibarr"
version = "16.0"
title = "Dolibbarr (on postgres)"
author = "Nua testers"
tagline = "Nua test with Dolibarr"
website = "https://nua.rocks/"
tags = ["test", "php", "web", "Dolibarr"]
licence = "GPLv3"
profile = ["test"]
release = 1

[build]
# build is a list of parameters used by the main build.py script
# use standard nua base image

[instance]
# instance is a list of parameters use when installing an instance of the package.
# These parameters can be over written by the deployment parameteers.


[instance.postgres_password]
key = "POSTGRES_PASSWORD"
nua_internal = true
# nua_internal = "POSTGRES_PASSWORD" maybe this syntax ?

[instance.db_host]
key = "DOLI_DB_HOST"
resource_property = "database.container"

[instance.user_passwd]
key = "DOLI_DB_PASSWORD"
persistent = true
random_str = true

[run]
# parameters passed as a dict to docker run
auto_remove = false
# detach = true mandatory

[run.env]

DOLI_VERSION = "16.0.3"
# The installation will be executed on first boot
DOLI_INSTALL_AUTO = 1

DOLI_PROD = 0

DOLI_ADMIN_LOGIN = ""
DOLI_ADMIN_PASSWORD = ""

DOLI_URL_ROOT = "http://0.0.0.0"
PHP_INI_DATE_TIMEZONE = "Europe/Paris"
PHP_INI_MEMORY_LIMIT = "256M"
PHP_MAX_UPLOAD = "20M"
PHP_MAX_EXECUTION_TIME = "300"

WWW_USER_ID = 33
WWW_GROUP_ID = 33

# might be required behind a proxy that make URL rewriting
DOLI_NOCSRFCHECK = "1" #

DOLI_AUTH = "dolibarr" # ldap
DOLI_LDAP_HOST = "127.0.0.1"
DOLI_LDAP_PORT = 389
DOLI_LDAP_VERSION = 3
DOLI_LDAP_SERVER_TYPE = "openldap"
DOLI_LDAP_LOGIN_ATTRIBUTE = "uid"
DOLI_LDAP_DN = "ou=users,dc=my-domain,dc=com"
DOLI_LDAP_FILTER = ""
DOLI_LDAP_BIND_DN = ""
DOLI_LDAP_BIND_PASS = ""
DOLI_LDAP_DEBUG = "false"

DOLI_CRON = 0



# DOLI_CRON_KEY		Security key launch cron jobs
# DOLI_CRON_USER

DOLI_DB_TYPE = "pgsql"
# DOLI_DB_HOST = ""
DOLI_DB_HOST_PORT = 5432
DOLI_DB_NAME = "dolidb"
DOLI_DB_USER = "doli"

[port.web]
container = 80

[[volume]]
# declare a local volume for plublic uploads
# type = "bind"
type = "volume"
# Name of the driver used to create the volume: (for type == "volume")
driver = "local"
# Mount source (e.g. a volume name or a host path):
source = "dolibarr_html"
# Container path:
target = "/var/www/html"
# mode (default to 'rw'
# mode = "rw"


[[resource]]
# A resource is another container required by the main app container, its
# configuration is described below, under the key of name of the resource. Several
# resources can be declared. The resource host will appear in the local network
# with a hostname equal to the container name. The name of the resource hostname
# is available in the environment variable NUA_${name_of_the_resource}_HOST, ie in
# this example: NUA_DATABASE_HOST

# declaration of the required image for the resurce, here the official Postgres
# Docker image
name = "database"
type = "docker"
image = "docker.io/library/postgres:14.5"
[resource.run]
    detach = true
    restart_policy.name = "always"
[resource.run_env]

[[resource.volume]]
    # here we declare a mounted volume (ie: managed by Docker daemon)
    # The mount type (bind / volume / tmpfs / npipe). Default: volume :
    type = "volume"
    # Name of the driver used to create the volume: (for type == "volume")
    driver = "local"
    # Mount source (e.g. a volume name or a host path):
    source = "postgres_dolibarr_2"
    # Container path:
    target = "/var/lib/postgresql/data"
    # mode (default to 'rw'
    # mode = "rw"
