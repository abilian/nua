[tool.poetry]
name = "nua-build"
version = "0.4.66"
description = "Nua build package (currently: build, core build, runtime)"
authors = ["Stefane Fermigier <sf@abilian.com>", "Jerome Dumonteil <jd@abilian.com>"]
license = "AGPL"
readme = "README.md"
packages = [
  { include = "nua", from = "src" }
]

[tool.poetry.scripts]
nua-build = "nua.build.main:app"
nua_test_replace_domain = "nua.build.scripts.test_replace_domain:main"

[tool.poetry.dependencies]
python = "^3.10"

# Internal deps "poor man's monorepo"
nua-lib = { path = "../nua-lib/", develop = false }
nua-runtime = { path = "../nua-runtime/", develop = false }
nua-autobuild = { path = "../nua-autobuild/", develop = false }

setuptools = "^65.5.0"
tomli = "^2.0.1"

# CLI and text ui
typer = {extras = ["all"], version = "^0.7.0"}

# DB drivers
# psycopg2-binary = "^2.9.4"

# Docker client
docker = "^6.0"
# Useful for docker over ssh
paramiko = "^2.12.0"

[tool.poetry.group.dev.dependencies]
abilian-devtools = "*"
nox = "*"
types-setuptools = "*"


[tool.pytest.ini_options]
filterwarnings = ["ignore:.*distutils package:DeprecationWarning", "ignore::DeprecationWarning"]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
ignore = [
    'E711', # comparison to None should be 'if cond is not None:'
    # TODO: fix these
    'E501', # Line too long
    'F401', # "..." imported but unused
    # 'F841', # Local variable assigned to but never used
    # Not ruff
    # 'W503', # line break before binary operator
    # 'S101', # Use of assert detected
    "I001", # Import block is un-sorted or un-formatted
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "dist",
    "node_modules",
    "venv",
    # specific:
    "tests/apps",
]

[tool.deptry]
exclude = [
    '.tox',
    '.nox',
    'tests',
    'sandbox',
    'doc',
    'scripts',
    "noxfile.py"
]
ignore_obsolete = [
    "setuptools",
    "paramiko",
]
ignore_missing = [
    "mariadb",
    "psycopg2",
]
ignore_transitive = [
]


[tool.pyright]
exclude = [
    '.tox',
    '.nox',
    'tests',
    'sandbox',
    'doc',
    'scripts',
]
